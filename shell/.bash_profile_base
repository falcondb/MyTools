alias ltr='ls -ltr'
alias ll='ls -l'
alias dir='ls -l'
alias mkdir='mkdir -p'
alias cd='function __mycd() { cd $1; echo "PWD: $PWD"; }; __mycd'
alias gh='history | grep'
alias mysh='ssh -X'
alias grep='grep --color'
alias fkill='function __mykill() { kill -9 $(pgrep $1); }; __mykill'
alias lsport='lsof -Pn -i4'
alias brew='brew cask'
alias pg='function __mypg() { ps aux | grep -i -w $1; }; __mypg'

HISTSIZE=100000
HISTFILESIZE=2000

export EDITOR='atom'

function ee() {
   [[ $# -eq 1 ]] && echo -e "\033[31mError: $1\033[0m"
 }

function ew() {
   [[ $# -eq 1 ]] && echo -e "\e[5m$1\e[25mNormal"
 }

function download_pdf {
  [[ ! $# -eq 2 ]] && ee "First augument is the URL, second is the file name (without suffix .pdf)" && return 1
  local titlename=$(echo "$2" | tr ' ' '-' | tr ':' '-')
  wget $1 -O ${titlename}.pdf
}

function make_tunnel() {
if [[ $# -ne 3 ]]; then
    echo "Function takes 3 parameters 1: Local Port 2: Remote IP 3: Remote Port"
else
    ssh -f WHO@SERVER -L 0.0.0.0:$1:$2:$3 -N
fi
}

function ssh_tunnel(){
if [[ $# -ne 1 ]]; then
        echo "need 1 parameter"
else
         ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/nul -i ~/.ssh/insecure_key root@localhost -p $1
fi
}

function patch_file() {
  [[ $# -ne 2 ]] && ew "Usage: original newFile " && return 1

  if [[ ! -r $1 ]] || [[ ! -w $1 ]] ||  [[ ! -r $2 ]]; then
      ee "No sufficient perssions on $1 and $2"
      return 1
  fi

  diff -u $1 $2 | patch
}

function fs_mount() {
  [[ $# -ne 2 ]] && ew "Usage: user@server:path mount_path " && return 1
  [[ ! -d $2 ]] && mkdir -p $2

  sudo sshfs -o allow_other,defer_permissions,IdentityFile=~/.ssh/id_rsa $1 $2
}

# Added by install_latest_perl_osx.pl
#[ -r /Users/yma/.bashrc ] && source /Users/yma/.bashrc


## command to disable .DS_Store file in MacOS
# defaults write com.apple.desktopservices DSDontWriteNetworkStores true
